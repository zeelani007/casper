{"version":3,"sources":["api.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAE3C,8BAA8B;AAM9B;IAEE,oBAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;IAAI,CAAC;IAEzC,8BAA8B;IAC9B,gCAAW,GAAX,UAAY,IAAQ;QAElB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,gCAAgC,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,UAAC,GAAO;YAC/E,OAAO,GAAG,CAAA;QACZ,CAAC,CAAC,CAAC,CAAA;IACL,CAAC;IAEC,6BAA6B;IAC7B,+BAAU,GAAV;QAEE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,gCAAgC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAC,GAAO;YACzE,OAAO,GAAG,CAAA;QACZ,CAAC,CAAC,CAAC,CAAA;IACL,CAAC;IAEC,gCAAgC;IACpC,+BAAU,GAAV,UAAW,IAAQ,EAAE,EAAS;QAE5B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,iCAAiC,GAAG,EAAE,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,UAAC,GAAO;YACpF,OAAO,GAAG,CAAA;QACZ,CAAC,CAAC,CAAC,CAAA;IACL,CAAC;IAED,mCAAmC;IACnC,kCAAa,GAAb,UAAc,EAAS;QAErB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAM,CAAA,CAAM,iCAAiC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,UAAC,GAAO;YAClF,OAAO,GAAG,CAAA;QACZ,CAAC,CAAC,CAAC,CAAA;IACL,CAAC;IAlCU,UAAU;QAHtB,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,UAAU,CAoCtB;IAAD,iBAAC;CApCD,AAoCC,IAAA;AApCY,gCAAU","file":"api.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n// import { map } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private _http:HttpClient) { }\r\n\r\n  // Post Method For Add Student\r\n  postStudent(data:any)\r\n  {\r\n    return this._http.post<any>(\"http://localhost:3000/customer\",data).pipe(((res:any)=> {\r\n      return res\r\n    }))\r\n  }\r\n\r\n    // Get Method For All Student\r\n    getStudent()\r\n    {\r\n      return this._http.get<any>(\"http://localhost:3000/customer\").pipe(((res:any)=> {\r\n        return res\r\n      }))\r\n    }\r\n\r\n      // Put Method For Update Student\r\n  putStudent(data:any, id:number)\r\n  {\r\n    return this._http.put<any>(\"http://localhost:3000/customer/\" + id,data).pipe(((res:any)=> {\r\n      return res\r\n    }))\r\n  }\r\n\r\n  // Delete Method For Update Student\r\n  deleteStudent(id:number)\r\n  {\r\n    return this._http.delete<any>(\"http://localhost:3000/customer/\" + id).pipe(((res:any)=> {\r\n      return res\r\n    }))\r\n  }\r\n    \r\n}\r\n"]}