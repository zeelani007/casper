{"version":3,"sources":["register.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAkD;AAClD,wCAAyD;AAWzD;IAEE,2BAAoB,OAAoB,EAAU,OAAoB,EAAU,MAAc,EACpF,MAAqB;QADX,YAAO,GAAP,OAAO,CAAa;QAAU,YAAO,GAAP,OAAO,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QACpF,WAAM,GAAN,MAAM,CAAe;QAI/B,iBAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAChC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,kBAAU,CAAC,OAAO,CAAC,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChG,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,kBAAU,CAAC,OAAO,CAAC,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,OAAO,CAAC,0EAA0E,CAAC,CAAC,CAAC,CAAC;YAC7K,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,kBAAU,CAAC,OAAO,CAAC,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5F,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;YACpC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YAC9B,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;SACtC,CAAC,CAAC;IAVH,CAAC;IAWD,2CAAe,GAAf;QAAA,iBASC;QARC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAA,MAAM;gBACjE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yCAAyC,EAAC,yBAAyB,CAAC,CAAA;gBACxF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAA;YACjC,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAA;SAChD;IACH,CAAC;IAzBU,iBAAiB;QAL7B,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;YACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;SACzC,CAAC;OACW,iBAAiB,CA2B7B;IAAD,wBAAC;CA3BD,AA2BC,IAAA;AA3BY,8CAAiB","file":"register.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.services';\nimport { ToastrService } from 'ngx-toastr'\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private builder: FormBuilder, private service: AuthService, private router: Router,\n    private toastr: ToastrService) {\n\n  }\n\n  registerform = this.builder.group({\n    id: this.builder.control('', Validators.compose([Validators.required, Validators.minLength(5)])),\n    name: this.builder.control('', Validators.required),\n    password: this.builder.control('', Validators.compose([Validators.required, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')])),\n    email: this.builder.control('', Validators.compose([Validators.required, Validators.email])),\n    gender: this.builder.control('male'),\n    role: this.builder.control(''),\n    isactive: this.builder.control(false)\n  });\n  proceedregister() {\n    if (this.registerform.valid) {\n      this.service.RegisterUser(this.registerform.value).subscribe(result => {\n        this.toastr.success('Please contact admin for enable access.','Registered successfully')\n        this.router.navigate(['login'])\n      });\n    } else {\n      this.toastr.warning('Please enter valid data.')\n    }\n  }\n\n}\n"]}