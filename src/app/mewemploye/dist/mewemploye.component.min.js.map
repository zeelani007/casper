{"version":3,"sources":["mewemploye.component.ts"],"names":["core_1","require","mewempform_component_1","paginator_1","sort_1","table_1","MewemployeComponent","_dialog","_empService","_coreService","this","displayedColumns","prototype","ngOnInit","getEmployeeList","openAddEditEmpForm","_this","open","MewempformComponent","afterClosed","subscribe","next","val","res","dataSource","MatTableDataSource","sort","paginator","error","console","log","applyFilter","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","deleteEmployee","id","openSnackBar","openEditForm","data","__decorate","ViewChild","MatPaginator","MatSort","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,uBAAAD,QAAA,sCAGAE,YAAAF,QAAA,+BACAG,OAAAH,QAAA,0BACAI,QAAAJ,QAAA,2BASAK,oBAAA,WAmBE,SAAAA,EACUC,EACAC,EACAC,GAFAC,KAAAH,QAAAA,EACAG,KAAAF,YAAAA,EACAE,KAAAD,aAAAA,EArBVC,KAAAC,iBAA6B,CAC3B,KACA,YACA,WACA,QACA,MACA,SACA,YAIA,UAuEJ,OA1DEL,EAAAM,UAAAC,SAAA,WACEH,KAAKI,mBAGPR,EAAAM,UAAAG,mBAAA,WAAA,IAAAC,EAAAN,KACoBA,KAAKH,QAAQU,KAAKf,uBAAAgB,qBAC1BC,cAAcC,UAAU,CAChCC,KAAM,SAACC,GACDA,GACFN,EAAKF,sBAMbR,EAAAM,UAAAE,gBAAA,WAAA,IAAAE,EAAAN,KACEA,KAAKF,YAAYM,kBAAkBM,UAAU,CAC3CC,KAAM,SAACE,GACLP,EAAKQ,WAAa,IAAInB,QAAAoB,mBAAmBF,GACzCP,EAAKQ,WAAWE,KAAOV,EAAKU,KAC5BV,EAAKQ,WAAWG,UAAYX,EAAKW,WAEnCC,MAAOC,QAAQC,OAInBxB,EAAAM,UAAAmB,YAAA,SAAYC,GACV,IAAMC,EAAeD,EAAME,OAA4BC,MACvDzB,KAAKc,WAAWY,OAASH,EAAYI,OAAOC,cAExC5B,KAAKc,WAAWG,WAClBjB,KAAKc,WAAWG,UAAUY,aAI9BjC,EAAAM,UAAA4B,eAAA,SAAeC,GAAf,IAAAzB,EAAAN,KACEA,KAAKF,YAAYgC,eAAeC,GAAIrB,UAAU,CAC5CC,KAAM,SAACE,GACLP,EAAKP,aAAaiC,aAAa,oBAAqB,QACpD1B,EAAKF,mBAEPc,MAAOC,QAAQC,OAInBxB,EAAAM,UAAA+B,aAAA,SAAaC,GAAb,IAAA5B,EAAAN,KACoBA,KAAKH,QAAQU,KAAKf,uBAAAgB,oBAAqB,CACvD0B,KAAIA,IAGIzB,cAAcC,UAAU,CAChCC,KAAM,SAACC,GACDA,GACFN,EAAKF,sBA9DY+B,WAAA,CAAxB7C,OAAA8C,UAAU3C,YAAA4C,wCACSF,WAAA,CAAnB7C,OAAA8C,UAAU1C,OAAA4C,8BAjBA1C,EAAmBuC,WAAA,CAL/B7C,OAAAiD,UAAU,CACTC,SAAU,iBACVC,YAAa,8BACbC,UAAW,CAAC,kCAED9C,GAAb,GAAa+C,QAAA/C,oBAAAA","file":"mewemploye.component.min.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MewempformComponent } from '../mewempform/mewempform.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EmployeeService } from '../mewemploye/newemp.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CoreService } from '../mewemploye/core.services';\n\n\n@Component({\n  selector: 'app-mewemploye',\n  templateUrl: './mewemploye.component.html',\n  styleUrls: ['./mewemploye.component.scss']\n})\nexport class MewemployeComponent implements OnInit {\n  displayedColumns: string[] = [\n    'id',\n    'firstName',\n    'lastName',\n    'email',\n    'dob',\n    'gender',\n    'education',\n    // 'company',\n    // 'experience',\n    // 'package',\n    'action',\n  ];\n  dataSource!: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private _dialog: MatDialog,\n    private _empService: EmployeeService,\n    private _coreService: CoreService\n  ) {}\n\n  ngOnInit(): void {\n    this.getEmployeeList();\n  }\n\n  openAddEditEmpForm() {\n    const dialogRef = this._dialog.open(MewempformComponent);\n    dialogRef.afterClosed().subscribe({\n      next: (val) => {\n        if (val) {\n          this.getEmployeeList();\n        }\n      },\n    });\n  }\n\n  getEmployeeList() {\n    this._empService.getEmployeeList().subscribe({\n      next: (res) => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      error: console.log,\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  deleteEmployee(id: number) {\n    this._empService.deleteEmployee(id).subscribe({\n      next: (res) => {\n        this._coreService.openSnackBar('Employee deleted!', 'done');\n        this.getEmployeeList();\n      },\n      error: console.log,\n    });\n  }\n\n  openEditForm(data: any) {\n    const dialogRef = this._dialog.open(MewempformComponent, {\n      data,\n    });\n\n    dialogRef.afterClosed().subscribe({\n      next: (val) => {\n        if (val) {\n          this.getEmployeeList();\n        }\n      },\n    });\n  }\n}\n"]}