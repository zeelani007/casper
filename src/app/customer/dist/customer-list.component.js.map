{"version":3,"sources":["customer-list.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA6D;AAK7D,oCAA0C;AAI1C,yDAA2D;AAC3D,+CAAiD;AAEjD,iDAA6D;AAS7D;IA0BI,+BACY,eAAgC;IACxC,sCAAsC;IAC/B,MAAiB,EACjB,QAAqB;QAHpB,oBAAe,GAAf,eAAe,CAAiB;QAEjC,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAa;QAzBhC,cAAS,GAAW,WAAW,CAAC;QAChC,eAAU,GAAW,EAAE,CAAC;QACxB,gBAAW,GAAW,CAAC,CAAC;QACxB,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAQ,EAAE,CAAC;QAKrB,qBAAgB,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QAC/F,eAAU,GAAQ,IAAI,CAAC;QACvB,UAAK,GAAQ,EAAE,CAAC;QAEhB,iBAAY,GAAQ;YAChB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACZ,CAAC;IASF,CAAC;IAED,2CAAW,GAAX,UAAY,WAAmB;QAC3B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,mDAAmD;QAC5F,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACzC,CAAC;IAED,6CAAa,GAAb,UAAc,SAAqB;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,0BAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,wCAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;aAC9B,SAAS,CAAC,UAAA,SAAS;YAChB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;QAE7C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,4CAAY,GAAZ,UAAa,OAAgB;QAA7B,iBAMC;QALG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;aAC9B,SAAS,CAAC,UAAA,SAAS;YAChB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;IACjD,CAAC;IAED,+CAAe,GAAf,UAAgB,OAAY;QAA5B,iBAoBC;QAnBG,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;iBAC9B,SAAS,CAAC,UAAA,SAAS;gBAChB,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;gBAClC,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,QAAkB;oBACtD,IAAI,KAAK,GAAG,IAAI,CAAC;oBAEjB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAC,CAAC;wBAC3B,KAAK,GAAG,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;4BACzB,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC7F,CAAC,CAAC,CAAA;oBACF,OAAO,KAAK,CAAC;gBACjB,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAClC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;SAChD;IAEL,CAAC;IAED,+CAAe,GAAf;QACI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,qCAAK,GAAL;QACI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IAExB,CAAC;IAED,iDAAiB,GAAjB,UAAkB,WAAgB;QAC9B,WAAW,CAAC,MAAM,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,4CAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;YAChC,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;IACP,CAAC;IAED,0CAAU,GAAV,UAAW,EAAU;QAArB,iBA2BC;QA1BG,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAa,EAC1C,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,mCAAmC,EAAE,EAAE,CAAC,CAAC;QACjF,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;QAG9B,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;YACpC,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAE7B,IAAI,KAAI,CAAC,cAAc,KAAK,SAAS,CAAC,iBAAiB,CAAC,cAAc,EAAE;gBACpE,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAC7C;oBACI,KAAI,CAAC,eAAe,CAAC,YAAY,EAAE;yBAC9B,SAAS,CAAC,UAAA,SAAS;wBAChB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;oBAClC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;oBAC7C,KAAI,CAAC,YAAY,CAAC,0CAA0C,EAAE,OAAO,CAAC,CAAC;gBAC3E,CAAC,EACD,UAAC,KAAU;oBACP,KAAI,CAAC,YAAY,GAAQ,KAAK,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;oBAC/B,KAAI,CAAC,YAAY,CAAC,gEAAgE,EAAE,OAAO,CAAC,CAAC;gBACjG,CAAC,CACJ,CAAC;aACL;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IA1IwB;QAAxB,gBAAS,CAAC,wBAAY,CAAC;oDAAyB;IAC7B;QAAnB,gBAAS,CAAC,cAAO,CAAC;+CAAe;IAFzB,qBAAqB;QANjC,gBAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,gCAAgC;YAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;YAC5C,SAAS,EAAE,CAAC,sBAAa,CAAC;SAC7B,CAAC;OACW,qBAAqB,CA+IjC;IAAD,4BAAC;CA/ID,AA+IC,IAAA;AA/IY,sDAAqB","file":"customer-list.component.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { Customer } from './customer';\nimport { CustomerService } from './customer.service';\nimport { PagerService } from '../_services';\nimport { ConfirmDialog } from '../shared';\nimport * as _ from 'lodash';\n\nimport {MatDialog} from '@angular/material/dialog'\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\n\n\n@Component({\n    selector: 'customer-list',\n    templateUrl: './customer-list.component.html',\n    styleUrls: ['./customer-list.component.css'],\n    providers: [ConfirmDialog]\n})\nexport class CustomerListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n\n    pageTitle: string = 'Customers';\n    imageWidth: number = 30;\n    imageMargin: number = 2;\n    showImage: boolean = false;\n    listFilter: any = {};\n    errorMessage: string;\n\n    customers: Customer[];\n    customerList: Customer[]; //\n    displayedColumns = [\"avatar\", \"firstname\", \"lastname\", \"rewards\", \"email\", \"membership\", \"id\"];\n    dataSource: any = null;\n    pager: any = {};\n    pagedItems: any[];\n    searchFilter: any = {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\"\n    };\n    selectedOption: string;\n\n\n    constructor(\n        private customerService: CustomerService,\n        // private pagerService: PagerService,\n        public dialog: MatDialog,\n        public snackBar: MatSnackBar) {\n    }\n\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n\n    freshDataList(customers: Customer[]) {\n        this.customers = customers;\n\n        this.dataSource = new MatTableDataSource(this.customers);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n    ngOnInit(): void {\n        this.customerService.getCustomers()\n            .subscribe(customers => {\n                this.freshDataList(customers);\n            },\n            error => this.errorMessage = <any>error);\n\n        this.searchFilter = {};\n        this.listFilter = {};\n    }\n\n    getCustomers(pageNum?: number) {\n        this.customerService.getCustomers()\n            .subscribe(customers => {\n                this.freshDataList(customers);\n            },\n            error => this.errorMessage = <any>error);\n    }\n\n    searchCustomers(filters: any) {\n        if (filters) {\n            this.customerService.getCustomers()\n                .subscribe(customers => {\n                    this.customers = customers;\n                    console.log(this.customers.length)\n                    this.customers = this.customers.filter((customer: Customer) => {\n                        let match = true;\n\n                        Object.keys(filters).forEach((k) => {\n                            match = match && filters[k] ?\n                                customer[k].toLocaleLowerCase().indexOf(filters[k].toLocaleLowerCase()) > -1 : match;\n                        })\n                        return match;\n                    });\n                    this.freshDataList(customers);\n                },\n                error => this.errorMessage = <any>error);\n        }\n\n    }\n\n    resetListFilter() {\n        this.listFilter = {};\n        this.getCustomers();\n    }\n\n    reset() {\n        this.listFilter = {};\n        this.searchFilter = {};\n        this.getCustomers();\n\n    }\n\n    resetSearchFilter(searchPanel: any) {\n        searchPanel.toggle();\n        this.searchFilter = {};\n        this.getCustomers();\n    }\n\n    openSnackBar(message: string, action: string) {\n        this.snackBar.open(message, action, {\n            duration: 1500,\n        });\n    }\n\n    openDialog(id: number) {\n        let dialogRef = this.dialog.open(ConfirmDialog,\n            { data: { title: 'Dialog', message: 'Are you sure to delete this item?' } });\n        dialogRef.disableClose = true;\n\n\n        dialogRef.afterClosed().subscribe(result => {\n            this.selectedOption = result;\n\n            if (this.selectedOption === dialogRef.componentInstance.ACTION_CONFIRM) {\n                this.customerService.deleteCustomer(id).subscribe(\n                    () => {\n                        this.customerService.getCustomers()\n                            .subscribe(customers => {\n                                this.freshDataList(customers);\n                            },\n                            error => this.errorMessage = <any>error);\n                        this.openSnackBar(\"The item has been deleted successfully. \", \"Close\");\n                    },\n                    (error: any) => {\n                        this.errorMessage = <any>error;\n                        console.log(this.errorMessage);\n                        this.openSnackBar(\"This item has not been deleted successfully. Please try again.\", \"Close\");\n                    }\n                );\n            }\n        });\n    }\n\n\n\n}\n"]}