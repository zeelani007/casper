{"version":3,"sources":["backend.service.ts"],"names":[],"mappings":"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","file":"backend.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient,  } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { User } from '../_models';\nimport db from \"./demo.db\";\n// import { AuthenticationService } from '.';\n\n\n@Injectable()\nexport class BackendService {\n\n  private baseUrl: string = \"\";\n  ds: any;\n\n  constructor(private http: HttpClient, \n    private location: Location) {\n    // console.log(http);\n    // this.location.prepareExternalUrl(this.baseUrl);\n    this.ds = Object.assign({},db ) || {}\n    console.log(this.ds)\n  }\n\n  getModel(action) {\n    if (action.includes('?') && action.includes('/')) {\n      return action.indexOf('?') > action.indexOf('/') ? action.substring(0, action.indexOf('/')) : action.substring(0, action.indexOf('?'))\n    } else {\n      return action.includes('?') ? action.substring(0, action.indexOf('?')) : action.substring(0, action.indexOf('/'))\n    }\n  }\n\n  getId(action, model) {\n    action = action.substr(model.length + 1)\n    return action.length > 0 && (action.includes('?') ? action.substring(0, action.indexOf('?')) : action)\n  }\n\n  getExpand(action, model) {\n    action = action.substr(action.indexOf('?'))\n    return action.includes('_expand') ? (\n      action.includes('&') ?\n        action.substring('_expand='.length + 1, action.indexOf('&')) :\n        action.substring('_expand='.length + 1)) : undefined\n  }\n\n  getEmbed(action) {\n    return action.includes('?') ? action.substring(action.indexOf('/'), action.indexOf('?')) : action.substring(action.indexOf('/'))\n  }\n\n  getData(action: string) {\n    const self = this\n    return new Promise(function (resolve, reject) {\n      const model = self.getModel(action)\n      const idStr = self.getId(action, model)\n      const id = isNaN(idStr) ? undefined : parseInt(idStr)\n      let exp = self.getExpand(action, model)\n      const expandModel = exp ? exp === \"category\" ? \"categories\" : exp + \"s\" : exp\n      const embed = self.getEmbed(action)\n      console.log(model)\n      let result\n      let expand, expandId\n      console.log(expandModel)\n      if (model in self.ds) {\n        if (id) {\n          result = self.ds[model][self.ds[model].findIndex(d => d.id === id)]\n\n          if (expandModel) {\n            expand = expandModel === \"categories\" ? \"category\" : expandModel.substr(0, expandModel.length - 1)\n            expandId = result[expand + \"Id\"]\n            result[expand] = self.ds[expandModel][self.ds[expandModel].findIndex(d => d.id === expandId)]\n          }\n        } else {\n          result = self.ds[model].map(m => {\n            if (expandModel) {\n              expand = expandModel === \"categories\" ? \"category\" : expandModel.substr(0, expandModel.length - 1)\n              expandId = m[expand + \"Id\"]\n              m[expand] = self.ds[expandModel][self.ds[expandModel].findIndex(d => d.id === expandId)]\n            }\n            return m\n          })\n        }\n      }\n      setTimeout(resolve, 200, { data: result })\n    });\n  }\n\n\n  getAll(action: string) {\n    return Observable.fromPromise(this.getData(action))\n  }\n\n  getByQuery(action: string) {\n    return Observable.fromPromise(this.getData(action))\n  }\n\n  getById(action: string) {\n    // const url = `${this.baseUrl}${action}`\n    // return this.http.get(url, this.jwt()).map((response: Response) => response.json());\n    return Observable.fromPromise(this.getData(action))\n  }\n\n  create(action: string, data: any) {\n    return Observable.fromPromise(new Promise(function (resolve, reject) {\n      const model = this.getModel(action)\n      data.id = this.ds[model] + 1\n      this.ds[model].push(data)\n      setTimeout(resolve, 200, { data: data })\n    }))\n  }\n\n  update(action: string, data: any) {\n    return Observable.fromPromise(new Promise(function (resolve, reject) {\n      const model = this.getModel(action)\n      const idx = this.ds[model].findIndex(d => d.id === data.id)\n      this.ds[model][idx] = Object.assign({}, data)\n      setTimeout(resolve, 200, { data: data })\n    }))\n\n  }\n\n  delete(action: string) {\n    return Observable.fromPromise(new Promise(function (resolve, reject) {\n      const model = this.getModel(action)\n      const id = this.getId()\n      id && this.ds[model].splice(this.ds[model].findIndex(d => d.id === id))\n      setTimeout(resolve, 200, { status: 200 })\n    }))\n  }\n\n  login(action: string, user: User) {\n    const self = this;\n    console.log(this.ds)\n    return Observable.fromPromise(new Promise(function (resolve, reject) {\n      const { access_token, user } = self.ds.token\n      setTimeout(resolve, 200, {\n        // data: {\n        access_token,\n        user\n        // }\n      })\n    }));\n  }\n\n  // private helper methods\n  // private form() {\n  //   let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\n  //   return { headers: headers };\n  // }\n\n  // private jwt() {\n  //   // create authorization header with jwt token\n  //   let user =  this.authService.getUser() //JSON.parse( );\n  //   if (user && user.token) {\n  //     let headers = new Headers({ 'Authorization': 'Bearer ' + user.token });\n  //     return { headers: headers } ;\n  //   }\n  // }\n\n  // private handleError(error: Response) {\n  //   console.error(error);\n  //   return Observable.throw(error.json() || 'Server error');\n  // }\n}\n"]}